事务隔离性

常见的并发异常：
第一类丢失更新：某一个事务的回滚，导致另外一个事务已更新的数据丢失了
第二类丢失更新：某一个事务的提交，导致另外一个事务已更新的数据丢失了
脏读：某一个事务，读取了另外一个事务未提交的数据
不可重复读：某一个事务，对同一数据前后读取的结果不一致
幻读：某一个事务，对同一个表查询到的行数不一致

常见的隔离级别：
Read Uncommitted:读取未提交的数据（未处理，极少使用）
Read Committed:读取已提交的数据（安全性不高 用）
Repeatable Read:可重复读（安全性高 用）
Serializable：串行化

事务管理实现机制：
悲观锁（数据库）：
    共享锁；事务A对某数据加了共享锁，其他事务只能对该数据加共享锁，不能加排他锁
    排他锁：事务A对某数据加了排他锁，其他事务对该数据既不能加共享锁，也不能加排他锁
乐观锁（自定义）：
    版本号、时间戳等
    在更新数据前，检查版本号是否发生变化。若变化取消本次更新，否则就更新数据（版本号加1）

Spring事务管理
声明式事务
    1.通过XML配置，声明某方法的事务特征
    2.通过注解，声明某方法的事务特征

编程式事务
    1.通过TransactionTemplate管理事务，并通过它执行数据库操作
